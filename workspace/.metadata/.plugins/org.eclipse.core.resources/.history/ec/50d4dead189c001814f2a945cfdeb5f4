package com.shelly.poc.ecs.ecsconnection;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.InputStream;
import java.io.InputStreamReader;

import org.apache.commons.io.IOUtils;
import org.jets3t.service.Jets3tProperties;
import org.jets3t.service.impl.rest.httpclient.RestS3Service;
import org.jets3t.service.model.S3Bucket;
import org.jets3t.service.model.S3Object;
import org.jets3t.service.security.AWSCredentials;

public class Jets3tSample {

    public static void main(String[] args) {
        Jets3tProperties props = new Jets3tProperties();
        props.setProperty("s3service.s3-endpoint", "objectlab.tl.boeing.com");
        props.setProperty("s3service.s3-endpoint-http-port", "9020");
        props.setProperty("s3service.s3-endpoint-https-port", "9021");
        props.setProperty("s3service.disable-dns-buckets", "false");
        props.setProperty("s3service.https-only", "true");
        
        /*
         *  
			"s3service.s3-endpoint", "objectlab.tl.boeing.com"
			"s3service.s3-endpoint-http-port", "9020"
			"s3service.s3-endpoint-https-port", "9021");
			"s3service.disable-dns-buckets", "false"
			"s3service.https-only", "true"
			
			access-Key =flightsciences
			Security-Key = /sfksi9luv6Q5YGekcwPfwHuAKE1CbcTAw/f8fvk

         */

        try {
        	System.out.println("Trying to connect to S3...");
            RestS3Service s3Service = new RestS3Service(
                    new AWSCredentials("flightsciences","/sfksi9luv6Q5YGekcwPfwHuAKE1CbcTAw/f8fvk"),
                    "JetS3t-sample", null, props);
            System.out.println("Connected to S3..***");

            
            try {
            	System.out.println("Uploading bpmn file to S3 bucket*************************8");
           	String bucketName="testbucket8_6_001";
           	String objectKey="testbucket8_6_001_key";
            	S3Bucket  fileBucket =s3Service.createBucket(bucketName);
                System.out.println("Created test bucket: " + fileBucket);
                String filePath="/AeroDB_.bpmn";
               
                byte[] bytes =null;
                if(args[0]!=null && args[0].length()!=0)
                {   System.out.println("args[0]="+args[0]);
                	filePath=args[0];
                	bytes=new byte[(int) filePath.length()]; 
                	System.out.println("filePath.length()="+filePath.length());
                }
                else
                {
                	 System.out.println("filePath="+filePath);
                     InputStream is = Jets3tSample.class.getResourceAsStream(filePath);
                     System.out.println("filePath=="+filePath);
                     bytes = IOUtils.toByteArray(is);
                }
               
                 
                 S3Object fileObject = new S3Object(objectKey,bytes);

            	s3Service.putObject(fileBucket, fileObject);
            	           	
                  System.out.println("fileBucket.getBucketName()="+fileObject.getKey());
                  System.out.println("fileBucket.getDataInputFile()="+fileObject.getDataInputStream());
                  System.out.println("fileBucket.getETag()="+fileObject.getETag());
                  System.out.println("fileBucket.getMd5HashAsBase64()="+fileObject.getMd5HashAsBase64());
                  System.out.println("fileBucket.getLastModifiedDate()="+fileObject.getLastModifiedDate());
                 
                  System.out.println("all buckets"+s3Service.listAllBuckets());
              	S3Bucket[] buckets=s3Service.listAllBuckets();
              	for (S3Bucket s3Bucket : buckets) {
              		System.out.printf("Bucket Name==="+s3Bucket.getName());
              		System.out.printf("Bucket==="+s3Bucket.getLocation());
              		System.out.println("--------------");
  				}
              	
              	System.out.println("Testbucket="+s3Service.getObjectAcl(bucketName, objectKey));
              	
              	System.out.println("Content printing***************************");
              	S3Object myfileObj= s3Service.getObject(bucketName, objectKey);
              	System.out.println("myfileObj"+myfileObj.getContentType()+",name =="+myfileObj.getName());
              	
              	System.out.println("DAta...........................................");
              	BufferedReader reader = new BufferedReader(new InputStreamReader(myfileObj.getDataInputStream()));
              		String data = null;
              		while ((data = reader.readLine()) != null) {
              		    System.out.println(data);
              		}
              	
    			
    		} catch (Exception e) {
    			System.out.println("Error in uploading bpmn file in bucket");
    			e.printStackTrace();
    		}
     		
           /* try {
            	String greeting = "Hello World!";
            	S3Object helloWorldObject = new S3Object("HelloWorld2.txt");
            	ByteArrayInputStream greetingIS = new ByteArrayInputStream(greeting.getBytes());
            	helloWorldObject.setDataInputStream(greetingIS);
            	helloWorldObject.setContentLength(
            	    greeting.getBytes(Constants.DEFAULT_ENCODING).length);
            	helloWorldObject.setContentType("text/plain");

            	// Upload the data objects.
                       	s3Service.putObject(testBucket, helloWorldObject);
				
			} catch (Exception e) {
				// TODO: handle exception
			}*/
            
        } catch (Exception e) {
        	System.out.println("Error"+e);
            e.printStackTrace();
        }
       
          
       
    }

}
